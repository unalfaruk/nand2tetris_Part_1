// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
	//The bast way for solution:
	//DMux4Way(in = load, sel = address[13..14], a = loadA, b = loadB, c = loadSCR, d = loadKBD);
	//
    // 00|01 
    //Or(a = loadA, b = loadB, out = loadRAM);
	
    // Put your code here:	

	//I tried to solve by another way
	Not(in=address[14],out=readyLoadRAM); //for RAM, address[14] needs to be 0
	And(a=load,b=readyLoadRAM, out=loadRAM);
	
	And(a=address[14],b=address[13], out=readyLoadKBD); //for KBD, address[13,14] needs to be 1
	And(a=load,b=readyLoadKBD, out=loadKBD);
	
	Not(in=loadKBD, out=readyForScreen);
	And(a=readyForScreen,b=address[14], out=readyLoadSCR); //if address[14]=1 and not address[13]=1.
	And(a=load,b=readyLoadSCR, out=loadSCR);
	
	RAM16K(in=in, load=loadRAM, address=address[0..13], out=outRAM);
	Screen(in=in, load=loadSCR, address=address[0..12], out=outSCR);
	Keyboard(out=outKBD);
	
	Mux4Way16(a = outRAM, b = outRAM, c = outSCR, d = outKBD, sel = address[13..14], out = out);
}